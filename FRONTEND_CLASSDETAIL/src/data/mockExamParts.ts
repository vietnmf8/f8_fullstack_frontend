// ƒê·ªãnh nghƒ©a ki·ªÉu d·ªØ li·ªáu cho c√¢u h·ªèi
export interface Question {
    id: number;
    answerType: 'single' | 'multiple' | 'fill';
    correctAnswer: string | string[];
}

// ƒê·ªãnh nghƒ©a ki·ªÉu cho m·ªôt ph·∫ßn thi
export interface ExamPart {
    id: string;
    name: string;
    code: string;
    duration: string;
    questionCount: number;
    questions: Question[]; // M·∫£ng c√°c c√¢u h·ªèi
}


// T√™n ph·∫ßn
export const mockExamParts = [
    {
        id: '1',
        name: 'PH·∫¶N 1: T∆Ø DUY TO√ÅN H·ªåC',
        code: '01',
        duration: '60 ph√∫t',
        questionCount: 5,
        questions: [
            { id: 1, answerType: 'single', correctAnswer: 'B' },
            { id: 2, answerType: 'multiple', correctAnswer: ['A', 'C'] },
            { id: 3, answerType: 'fill', correctAnswer: 'Jack - J97' },
            { id: 4, answerType: 'single', correctAnswer: 'D' },
            { id: 5, answerType: 'multiple', correctAnswer: ['B', 'D'] },
        ]
    },
    {
        id: '2',
        name: 'PH·∫¶N 3: T∆Ø DUY KHOA H·ªåC/ GI·∫¢I QUY·∫æT V·∫§N ƒê·ªÄ',
        code: '01',
        duration: '60 ph√∫t',
        questionCount: 3,
        questions: [
            { id: 1, answerType: 'single', correctAnswer: 'A' },
            { id: 2, answerType: 'fill', correctAnswer: 'Tr·ªãnh Tr·∫ßn Ph∆∞∆°ng Tu·∫•n' },
            { id: 3, answerType: 'multiple', correctAnswer: ['A', 'B', 'C'] },
        ]
    },
    {
        id: '3',
        name: 'PH·∫¶N 2: T∆Ø DUY ƒê·ªåC HI·ªÇU',
        code: '01',
        duration: '30 ph√∫t',
        questionCount: 2,
        questions: [
            { id: 1, answerType: 'single', correctAnswer: 'C' },
            { id: 2, answerType: 'fill', correctAnswer: 'Meo Meo üåª' },
        ]
    },
];
